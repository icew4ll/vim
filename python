# update pip {{{
pip3.7 install --user --upgrade pip
# }}}

# install pyenv {{{
# pyenv = nvm for python
# install preqs
  sudo apt-get install -y make build-essential libssl-dev zlib1g-dev libbz2-dev \
    libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev \
    xz-utils tk-dev

# install pyenv script
# pyenv manages python version
curl -L https://raw.githubusercontent.com/pyenv/pyenv-installer/master/bin/pyenv-installer | bash

# Load pyenv automatically by adding
# the following to ~/.config/fish/config.fish:
set -x PATH "/home/xeno/.pyenv/bin" $PATH
status --is-interactive; and . (pyenv init -|psub)
status --is-interactive; and . (pyenv virtualenv-init -|psub)

# check install
**restart shell so that above commands are run in shell
# pyenv should print commands not a path

# list available python version
pyenv install --list
pyenv install 3.6.2

# inspect python version
# if python 2.7.12 is returned, we want to use latest python3 installed above
python

# To change system python version
v ~/.pyenv/version
# input version
3.6.2

# install pyenv doctor
pyenv doctor

# pyenv options
pyenv global can be thought of as altering the $PATH to include the specified versions' bin directory. This only works while pyenv is active.
pyenv shell is the same as above, but for the current session.
pyenv local is the same as above, but it writes a .python-version file in the current directory. It allows the specified versions to be automatically set when you enter the directory, and unset when you leave it. Very convenient for projects.

# add .python-version to global .gitignore
.python-version to your global .gitignore

# reset session's Python version
pyenv shell --unset

# activate virtual environment
# only one $VIRTUAL_ENV can be active at a time
pyenv activate venvname
pyenv shell venvname

# deactivate virtual environment
pyenv deactivate

# list versions installed
pyenv versions
# system: refers to python versions that were originally found in $PATH
pyenv versions

# update pyenv
pyenv update

# uninstall
rm -fr ~/.pyenv

# remove fish shell entry
set -x PATH "/home/xeno/.pyenv/bin" $PATH
status --is-interactive; and . (pyenv init -|psub)
status --is-interactive; and . (pyenv virtualenv-init -|psub)

# }}}

# install python for neovim {{{
# install python 2
pyenv install 2.7.14
pyenv virtualenv 2.7.14 neovim2
pyenv activate neovim2
/home/xeno/.pyenv/versions/neovim2/bin/pip install neovim
pyenv which python

# note interpreter path
/home/xeno/.pyenv/versions/neovim2/bin/python

# install python virtualenv for neovim
pyenv virtualenv 3.6.2 neovim3
pyenv activate neovim3
/home/xeno/.pyenv/versions/neovim3/bin/pip install neovim
pyenv which python

# note interpreter path
/home/xeno/.pyenv/versions/neovim3/bin/python
# add interpreter paths to init.vim
let g:python3_host_prog = '/home/xeno/.pyenv/versions/neovim3/bin/python'

# install node provider for neovim
npm install -g neovim

# install flake8 for linting
# ** Not Verified **
/home/xeno/.pyenv/versions/neovim3/bin/pip install neovim
# pyenv which flake8
# which flake8
# ln -s `pyenv which flake8` ~/bin/flake8

# }}}

# python3.6 ubuntu 16.04.3 {{{
# 9/11/17
sudo add-apt-repository ppa:jonathonf/python-3.6
sudo apt update
sudo apt install python3.6
sudo apt install python3.6-dev
sudo apt install python3.6-venv
wget https://bootstrap.pypa.io/get-pip.py
sudo python3.6 get-pip.py
sudo ln -s /usr/bin/python3.6 /usr/local/bin/python3
sudo ln -s /usr/local/bin/pip /usr/local/bin/pip3

# verify python3.6 version
python --version
python3 --version
pip --version

# install pipenv
pip install --user pipenv

# cd folder install deps
cd myproject
pipenv install requests
pipenv run python main.py

# install global autopep8 for vim autoformatting
# flake8 for syntastic python
pip install --user autopep8
pip install --user flake8

# install spyder3
pip install --user PyQt5
sudo pip install spyder

# install vim ycm python3.6
sudo add-apt-repository ppa:jonathonf/vim
sudo apt update
sudo apt install vim
sudo apt install python3.6
sudo apt install python3.6-dev
sudo apt install python3.6-venv
wget https://bootstrap.pypa.io/get-pip.py
sudo python3.6 get-pip.py
sudo ln -s /usr/bin/python3.6 /usr/local/bin/python3
sudo ln -s /usr/local/bin/pip /usr/local/bin/pip3

# Do this only if you want python3 to be the default Python
# instead of python2 (may be dangerous, esp. before 2020):
sudo ln -s /usr/bin/python3.6 /usr/local/bin/python

# install ycm with python3.6
python3.6 install.py --tern-completer --racer-completer



# }}}

# install python live reload {{{

# check python version
python -V
python3 -V
pip2 -V
pip3 -V

# upgrade pip
pip3 install --upgrade pip
pip2 install --upgrade pip

# python simple web server
python3 -m http.server

# install livereload via pip3
pip3 install livereload

# use livereload
cd directory
livereload -p 8080

$ export NVIM_PYTHON_LOG_FILE=/home/oak/Documents/log
$ export NVIM_PYTHON_LOG_LEVEL=DEBUG

# }}}

# install python 3.6 ubuntu 17.04 {{{
# install python
sudo apt update
sudo apt install python3.6

# install pip
sudo apt install python3-pip

# install pandas
python3.6 -m pip install wheel
python3.6 -m pip install pandas

# check installed packages
python3.6 -m site --user-site
ls /home/zeal/.local/lib/python3.6/site-packages

# install via PPA
sudo add-apt-repository ppa:jonathonf/python-3.6

sudo apt update
sudo apt install python3.6
sudo apt install python3.6-dev
sudo apt install python3.6-venv
wget https://bootstrap.pypa.io/get-pip.py
sudo python3.6 get-pip.py
sudo ln -s /usr/bin/python3.6 /usr/local/bin/python
sudo ln -s /usr/bin/python3.6 /usr/local/bin/python3
sudo ln -s /usr/local/bin/pip /usr/local/bin/pip3

# install flake8 for vim
conda install -c anaconda flake8=3.3.0

# }}}

# python vim {{{

klen/python-mode
tpope/vim-sensible
Lokaltog/vim-powerline

# }}}

# commands {{{

# running pandas
# binary install dir: /home/zeal/anaconda3/bin
1) install anaconda3
2) ipython
3) %run file.py

# navigate/edit filesystem
import os

# change directory
os.chdir('path')

# verify pwd
print(os.getcwd())

# }}}

# python concepts {{{
# method: function associated with a class
# attribute:
# }}}

# troubleshoot {{{
# module compiled against API version 0xb but this version of numpy is 0xa
1) conda upgrade numpy

# }}}
